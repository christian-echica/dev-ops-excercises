Install Add-On "SSH Credentials"
Make sure the target server has git installed 

This is done during tomcat installation 
# Make the ec2-user visudo
sudo visudo
username ALL=(ALL) NOPASSWD:ALL

# chown -R ec2-user:ec2-user /opt

# Working pipeline below
pipeline {
    agent any
    environment {
        PATH = "/usr/bin:$PATH"
    }
    parameters {
        string(name: 'TOMCAT_PUBLIC_IP', defaultValue: '', description: 'Public IP of Tomcat Server')
    }
    stages {
        stage('SSH Login') {
            steps {
                sshagent(['SSH_CREDENTIALS']) {
                    sh "ssh -o StrictHostKeyChecking=no ec2-user@${params.TOMCAT_PUBLIC_IP} 'pwd'"
                }
            }
        }
        stage('Clone from Github') {
            steps {
                script {
                    sshagent(['SSH_CREDENTIALS']) {
                        def dirExists = sh(script: "ssh -o StrictHostKeyChecking=no ec2-user@${params.TOMCAT_PUBLIC_IP} 'if [ -d ~/dev-ops-excercises ]; then echo \"exists\"; else echo \"not exists\"; fi'", returnStdout: true).trim()
                        if (dirExists == "not exists") {
                            sh "ssh -o StrictHostKeyChecking=no ec2-user@${params.TOMCAT_PUBLIC_IP} 'git clone https://github.com/christian-echica/dev-ops-excercises.git ~/dev-ops-excercises'"
                        } else {
                            echo "Directory already exists"
                        }
                    }
                }
            }
        }
        stage('List Directory') {
            steps {
                sshagent(['SSH_CREDENTIALS']) {
                    sh "ssh -o StrictHostKeyChecking=no ec2-user@${params.TOMCAT_PUBLIC_IP} 'ls -lah ~/dev-ops-excercises'"
                }
            }
        }
        stage('Copy war file to Tomcat') {
            steps {
                sshagent(['SSH_CREDENTIALS']) {
                    sh """
                    scp -o StrictHostKeyChecking=no dev-ops-excercises/deploy_war_only_to_ec2/SampleWebApp.war ec2-user@${params.TOMCAT_PUBLIC_IP}:/opt/tomcat/webapps/
                    """
                }
            }
        }
        stage('Restart Tomcat') {
            steps {
                sshagent(['SSH_CREDENTIALS']) {
                    sh "ssh -o StrictHostKeyChecking=no ec2-user@${params.TOMCAT_PUBLIC_IP} 'sudo systemctl restart tomcat'"
                }
            }
        }
    }
}
